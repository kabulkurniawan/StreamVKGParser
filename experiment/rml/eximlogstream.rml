@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rmls: <http://semweb.mmlab.be/ns/rmls#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ue: <http://w3id.org/sepses/vocab/unix-event#> .
@prefix exim: <https://w3id.org/sepses/vocab/log/exim#> .
@prefix cl: <https://w3id.org/sepses/vocab/log/core#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@base <http://example.com/base/> .

<TriplesMap1> a rr:TriplesMap;

  rml:logicalSource [
    rml:source [
        a rmls:TCPSocketStream ;
        rmls:hostName "localhost" ;
        rmls:port "6660"
    ];
    rml:referenceFormulation ql:JSONPath;
  ];


 rr:subjectMap [ rr:template "http://w3id.org/sepses/resource/eximlog#LogEntry-{id}"];
 rr:predicateObjectMap [ rr:predicate rdf:type; rr:objectMap [ rml:reference "https://w3id.org/sepses/vocab/log/eximlog#eximLogEntry"]];
 rr:predicateObjectMap [ rr:predicate cl:hasLogFamily; rr:objectMap [ rml:reference "http://dbpedia.org/resource/Exim"]];
 rr:predicateObjectMap [ rr:predicate exim:flags;  rr:objectMap [ rr:template "{exim_flags}";  rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate cl:timestamp;  rr:objectMap [ rr:template "{exim_date}";  rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:pid; rr:objectMap [ rr:template "{exim_pid}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:qt; rr:objectMap [rr:template "{exim_qt}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:remoteHost; rr:objectMap [rr:template "{exim_remote_host}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:interface; rr:objectMap [rr:template "{exim_interface}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:messageSize; rr:objectMap [rr:template "{exim_msg_size}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:messageId; rr:objectMap [rr:template "{exim_msg_id}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:protocol; rr:objectMap [rr:template "{exim_protocol}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:headerId; rr:objectMap [carml:multiTemplate "{exim_header_id}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:subject; rr:objectMap [rr:template "{exim_subject}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:recipient; rr:objectMap [rr:template "{exim_rcpt}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:recipient_outer; rr:objectMap [rr:template "{exim_rcpt_outer}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:router; rr:objectMap [rr:template "{exim_router}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:transport; rr:objectMap [rr:template "{exim_transport}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:sender; rr:objectMap [rr:template "{exim_sender}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:exTerms; rr:objectMap [rr:template "{exim_exclude_terms_1}"; rr:datatype xsd:string;]];
 rr:predicateObjectMap [ rr:predicate exim:exTerms; rr:objectMap [rr:template "{exim_exclude_terms}"; rr:datatype xsd:string;]].